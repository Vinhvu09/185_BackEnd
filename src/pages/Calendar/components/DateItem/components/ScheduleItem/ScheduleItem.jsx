import { useDispatch, useSelector } from "react-redux"
import Swal from 'sweetalert2'
import { deleteAxios } from "../../../../../../api/Axios"
import { addBackendDataSchedule, addEditSchedule, resetMeetingState } from "../../../../../../store/Reducer/meetingReducer"
import AvatarUser from "../AvatarUser/AvatarUser"
import PopupAddUser from "../PopupAddUser/PopupAddUser"
import PopupListUser from "../PopupListUser/PopupListUser"
import "./ScheduleItem.scss"

export default function ScheduleItem({
  timeStart,
  MeetingTimeStart,
  MeetingTimeEnd,
  title,
  description,
  type,
  employees,
  keyID,
  idSchedule,
  funcSetStartDate,
  month,
  year,
  day,
  dataSchedule
}) {


  const { editSchedule, backendDataSchedules } = useSelector((store) => store.meeting)


  const dispatch = useDispatch()

  const swalScheduleDelete = Swal.mixin({
    customClass: {
      confirmButton: 'sweertAlert__cancelSchedule',
      cancelButton: 'sweertAlert__saveSchedule'
    },
    buttonsStyling: false
  })


  function getHour(time) {
    if (time.slice(0, 2)[0] === "0") {
      return time.slice(1, 2) * 1
    }
    return time.slice(0, 2) * 1
  }
  function getMinute(time) {
    if (time.slice(3, 5)[0] === "0") {
      return time.slice(4, 5) * 1
    }
    return time.slice(3, 5) * 1
  }

  function getTimeFormat(time) {
    return time.slice(0, 5)
  }
  function caculatePositionY(timeStart, MeetingTime) {
    const positionByMinutes = (208 * getMinute(MeetingTime)) / 60

    let positionByTime = getHour(MeetingTime) - timeStart
    if (positionByTime === 0) {
      positionByTime += 24
    } else {
      positionByTime = positionByTime * 208 + 24
    }
    return positionByTime + positionByMinutes
  }
  function getDuration(MeetingTimeStart, MeetingTimeEnd) {
    const minuteStart =
      getHour(MeetingTimeStart) * 60 + getMinute(MeetingTimeStart)
    const minuteEnd = getHour(MeetingTimeEnd) * 60 + getMinute(MeetingTimeEnd)
    return minuteEnd - minuteStart
  }

  function checkColorBackground(type) {
    if (type === "ME") {
      return `#E2F9F1`
    }
    if (type === "BU") {
      return `#DDF0FF`
    }
    if (type === "OT") {
      return `#F3F3F3`
    }
  }
  function checkColorBorder(type) {
    if (type === "ME") {
      return `#3CD5A3`
    }
    if (type === "BU") {
      return `#1A9AFF`
    }
    if (type === "OT") {
      return `#E0E0E0`
    }
  }

  const handleClickEdit = () => {
    const editForm = document.querySelector(".dateItem__editSchedule")
    const scheduleForm = document.querySelector(".dateItem__schedule")
    const editOverlay = document.querySelector(".dateItem__editOverlay")

    editForm.style.width = "30%"
    editForm.style.opacity = 1
    editForm.style.visibility = "visible"
    scheduleForm.style.width = "70%"
    editOverlay.style.display = "block"
    // dispatch(addEditSchedule(dataSchedules[0]))
    dispatch(addEditSchedule(dataSchedule))

  }

  function handleClickAddUser(e) {
    const editForm = document.querySelector(".dateItem__editSchedule")
    const scheduleForm = document.querySelector(".dateItem__schedule")
    if (editForm.style.opacity * 1 === 1) {
      editForm.style.width = "0"
      editForm.style.opacity = 0
      editForm.style.visibility = "hidden"
      scheduleForm.style.width = "100%"
    }
    if (e.target.className.animVal === "addUserSVGSchedule") {
      document
        .querySelector(".openPopupAddUserSchedule")
        ?.classList.remove("openPopupAddUserSchedule")
      const popUpAddUserSchedule = e.target.nextSibling
      popUpAddUserSchedule.classList.add("openPopupAddUserSchedule")
    }
  }

  const handleClickDelete = (id) => {
    const editForm = document.querySelector(".dateItem__editSchedule")
    const scheduleForm = document.querySelector(".dateItem__schedule")
    if (editForm.style.opacity * 1 === 1) {
      editForm.style.width = "0"
      editForm.style.opacity = 0
      editForm.style.visibility = "hidden"
      scheduleForm.style.width = "100%"
    }

    swalScheduleDelete.fire({
      html: `<svg className="sweertAlert__iconWarningEditSchedule"width="52" height="52" viewBox="0 0 52 52" fill="none" xmlns="http://www.w3.org/2000/svg">
      <rect width="52" height="52" rx="26" fill="#E13F3F"/>
      <g clip-path="url(#clip0_1896_137514)">
      <path d="M30.0832 35.4688C30.0832 37.9673 28.0271 40 25.4998 40C22.9726 40 20.9165 37.9673 20.9165 35.4688C20.9165 32.9702 22.9726 30.9375 25.4998 30.9375C28.0271 30.9375 30.0832 32.9702 30.0832 35.4688ZM21.447 12.4273L22.2262 27.8335C22.2628 28.557 22.8668 29.125 23.5995 29.125H27.4002C28.1329 29.125 28.7369 28.557 28.7735 27.8335L29.5527 12.4273C29.5919 11.6508 28.9658 11 28.1794 11H22.8203C22.0339 11 21.4078 11.6508 21.447 12.4273Z" fill="white"/>
      </g>
      <defs>
      <clipPath id="clip0_1896_137514">
      <rect width="11" height="29" fill="white" transform="translate(20 11)"/>
      </clipPath>
      </defs>
      </svg>
       <p className="sweertAlert__titleEditSchedule" style="font-weight:600;font-size:24px;color:#393b3d;margin-top:8px;">Bạn có chắc xoá</p>
       <span className="sweertAlert__contentEditSchedule" style="font-weight:400;font-size:16px;color:#393b3d;margin-top:8px;">Hành động xoá sẽ không được hoàn tác<br/>tiếp tục</span>
   
       `,

      showCancelButton: true,
      confirmButtonText: 'Trở về',
      cancelButtonText: 'Tiếp tục',
      reverseButtons: true
    }).then(async (result) => {
      if (result.isConfirmed) {

      } else if (
        result.dismiss === Swal.DismissReason.cancel
      ) {
        const editedData = [...backendDataSchedules].filter(data => data.id !== id)
        dispatch(addBackendDataSchedule(editedData))
        funcSetStartDate(new Date(dataSchedule.schedule_date))
      }
    })
  }
  const handleClickViewDetailSchedule = (e) => {
    if (e.target.className === "scheduleItem" || e.target.className === "scheduleItemV2") {
      document.querySelector(".viewDetail").style.display = "flex"
      dispatch(addEditSchedule(dataSchedule))
    }

  }

  return (
    <>
      {getDuration(
        getTimeFormat(MeetingTimeStart),
        getTimeFormat(MeetingTimeEnd)
      ) < 30 ? (
        <div
          className="scheduleItemV2"
          style={{
            top: `${caculatePositionY(timeStart, MeetingTimeStart)}px`,
            height: `${caculatePositionY(timeStart, MeetingTimeEnd) -
              caculatePositionY(timeStart, MeetingTimeStart)
              }px`,
            background: `${checkColorBackground(type)}`,
            borderLeft: `16px solid ${checkColorBorder(type)}`,
          }}
          onClick={(e) => handleClickViewDetailSchedule(e)}
        >
          <div className="scheduleItemV2__left">
            <div className="scheduleItem__left--time">
              {getTimeFormat(MeetingTimeStart)} -{" "}
              {getTimeFormat(MeetingTimeEnd)}
            </div>
            <div className="scheduleItem__left--title">{title}</div>
          </div>

          <div className="scheduleItemV2__right">
            <svg
              width="21"
              height="20"
              viewBox="0 0 21 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              onClick={() => handleClickDelete(dataSchedule.id)}
            >
              <path
                d="M16.4312 17.5791C16.0418 17.5791 15.6504 17.5791 15.2611 17.5791C14.3258 17.5791 13.3927 17.5791 12.4574 17.5791C11.3409 17.5791 10.2244 17.5791 9.10578 17.5791C8.14582 17.5791 7.18586 17.5791 6.2259 17.5791C5.78506 17.5791 5.34215 17.5809 4.90131 17.5791C4.82303 17.5791 4.74475 17.5735 4.66647 17.5661C4.73857 17.5754 4.81273 17.5847 4.88483 17.5921C4.73857 17.5735 4.59643 17.5401 4.45841 17.4901C4.52433 17.5142 4.59025 17.5401 4.65617 17.5643C4.51403 17.5105 4.38219 17.4418 4.26065 17.3565C4.31627 17.3955 4.37189 17.4344 4.42751 17.4734C4.31421 17.3936 4.21327 17.3027 4.12469 17.2007C4.16795 17.2508 4.21121 17.3009 4.25447 17.351C4.16177 17.2415 4.08349 17.1228 4.02375 16.9949C4.05053 17.0542 4.07937 17.1136 4.10615 17.1729C4.05053 17.0486 4.01345 16.9207 3.99285 16.789C4.00315 16.8539 4.01345 16.9207 4.02169 16.9856C3.99903 16.8205 4.00727 16.6517 4.00727 16.4867C4.00727 16.1899 4.00727 15.8932 4.00727 15.5964C4.00727 15.1457 4.00727 14.695 4.00727 14.2443C4.00727 13.6898 4.00727 13.1334 4.00727 12.5788C4.00727 11.9705 4.00727 11.3621 4.00727 10.7538C4.00727 10.1343 4.00727 9.51487 4.00727 8.89726C4.00727 8.31859 4.00727 7.73993 4.00727 7.16126C4.00727 6.67348 4.00727 6.18569 4.00727 5.69976C4.00727 5.34737 4.00727 4.99312 4.00727 4.64073C4.00727 4.4738 4.00933 4.30688 4.00727 4.13996C4.00727 4.13254 4.00727 4.12512 4.00727 4.1177C3.73329 4.36438 3.45725 4.61291 3.18327 4.85958C3.31717 4.85958 3.45107 4.85958 3.58291 4.85958C3.94547 4.85958 4.31009 4.85958 4.67265 4.85958C5.20619 4.85958 5.7418 4.85958 6.27534 4.85958C6.93042 4.85958 7.5855 4.85958 8.24058 4.85958C8.95746 4.85958 9.6764 4.85958 10.3933 4.85958C11.1184 4.85958 11.8415 4.85958 12.5666 4.85958C13.2423 4.85958 13.918 4.85958 14.5936 4.85958C15.1622 4.85958 15.7308 4.85958 16.2993 4.85958C16.7093 4.85958 17.1213 4.85958 17.5312 4.85958C17.7269 4.85958 17.9205 4.86144 18.1162 4.85958C18.1245 4.85958 18.1327 4.85958 18.141 4.85958C17.867 4.61291 17.5909 4.36438 17.317 4.1177C17.317 4.23269 17.317 4.34769 17.317 4.46268C17.317 4.77241 17.317 5.084 17.317 5.39373C17.317 5.8537 17.317 6.31552 17.317 6.77548C17.317 7.33746 17.317 7.89758 17.317 8.45955C17.317 9.06974 17.317 9.67994 17.317 10.292C17.317 10.9096 17.317 11.5272 17.317 12.1448C17.317 12.7179 17.317 13.291 17.317 13.8641C17.317 14.3426 17.317 14.8212 17.317 15.2997C17.317 15.6391 17.317 15.9803 17.317 16.3198C17.317 16.47 17.317 16.6202 17.317 16.7704C17.317 16.8428 17.3128 16.9133 17.3025 16.9856C17.3128 16.9207 17.3231 16.8539 17.3314 16.789C17.3108 16.9207 17.2737 17.0486 17.2181 17.1729C17.2449 17.1136 17.2737 17.0542 17.3005 16.9949C17.2407 17.1228 17.1645 17.2415 17.0698 17.351C17.113 17.3009 17.1563 17.2508 17.1995 17.2007C17.111 17.3027 17.01 17.3936 16.8967 17.4734C16.9523 17.4344 17.008 17.3955 17.0636 17.3565C16.942 17.44 16.8102 17.5105 16.6681 17.5643C16.734 17.5401 16.7999 17.5142 16.8658 17.4901C16.7278 17.5401 16.5857 17.5735 16.4394 17.5921C16.5115 17.5828 16.5857 17.5735 16.6578 17.5661C16.5836 17.5754 16.5074 17.5791 16.4312 17.5791C16.219 17.5809 15.9986 17.6607 15.8482 17.7961C15.706 17.9241 15.5969 18.1355 15.6072 18.321C15.6278 18.7197 15.9697 19.0666 16.4312 19.0628C17.1192 19.0573 17.8134 18.8032 18.279 18.3414C18.7136 17.9111 18.9629 17.3621 18.967 16.7779C18.9691 16.6276 18.967 16.4755 18.967 16.3253C18.967 15.9488 18.967 15.5723 18.967 15.1977C18.967 14.6561 18.967 14.1145 18.967 13.5729C18.967 12.9331 18.967 12.2951 18.967 11.6552C18.967 10.9782 18.967 10.3013 18.967 9.62615C18.967 8.97145 18.967 8.31859 18.967 7.66388C18.967 7.10191 18.967 6.53808 18.967 5.97611C18.967 5.56251 18.967 5.14891 18.967 4.73532C18.967 4.53872 18.9691 4.34027 18.967 4.14367C18.967 4.1344 18.967 4.12698 18.967 4.1177C18.967 3.71709 18.59 3.37582 18.143 3.37582C18.0091 3.37582 17.8752 3.37582 17.7434 3.37582C17.3808 3.37582 17.0162 3.37582 16.6536 3.37582C16.1201 3.37582 15.5845 3.37582 15.051 3.37582C14.3959 3.37582 13.7408 3.37582 13.0857 3.37582C12.3688 3.37582 11.6499 3.37582 10.933 3.37582C10.2079 3.37582 9.48482 3.37582 8.7597 3.37582C8.08402 3.37582 7.40834 3.37582 6.73266 3.37582C6.1641 3.37582 5.59554 3.37582 5.02697 3.37582C4.61703 3.37582 4.20503 3.37582 3.79509 3.37582C3.59939 3.37582 3.40575 3.37397 3.21005 3.37582C3.20181 3.37582 3.19357 3.37582 3.18533 3.37582C2.74037 3.37582 2.36133 3.71523 2.36133 4.1177C2.36133 4.5109 2.36133 4.90224 2.36133 5.29544C2.36133 6.24133 2.36133 7.18908 2.36133 8.13498C2.36133 9.30344 2.36133 10.47 2.36133 11.6385C2.36133 12.6994 2.36133 13.7603 2.36133 14.8193C2.36133 15.4276 2.36133 16.0341 2.36133 16.6425C2.36133 17.082 2.44579 17.5068 2.68475 17.8962C3.12971 18.6251 4.01139 19.061 4.92603 19.0628C5.55434 19.0628 6.18264 19.0628 6.81094 19.0628C8.02222 19.0628 9.23556 19.0628 10.4468 19.0628C11.687 19.0628 12.925 19.0628 14.1652 19.0628C14.8862 19.0628 15.6072 19.0628 16.3261 19.0628C16.3611 19.0628 16.3961 19.0628 16.4312 19.0628C16.8617 19.0628 17.2758 18.7216 17.2552 18.321C17.2346 17.9204 16.8926 17.5791 16.4312 17.5791Z"
                fill="#E62614"
              />
              <path
                d="M13.073 0.664092C12.7084 0.664092 12.3417 0.664092 11.9771 0.664092C11.2581 0.664092 10.5371 0.664092 9.81817 0.664092C9.32171 0.664092 8.82525 0.664092 8.32879 0.664092C7.91061 0.664092 7.48007 0.747553 7.13193 0.962698C6.53659 1.32622 6.17197 1.90303 6.16785 2.55588C6.16373 3.06036 6.16785 3.56484 6.16785 4.06932C6.16785 4.08601 6.16785 4.1027 6.16785 4.11939C6.16785 4.52001 6.54483 4.86127 6.99185 4.86127C7.23493 4.86127 7.47801 4.86127 7.72109 4.86127C8.30613 4.86127 8.88911 4.86127 9.47415 4.86127C10.1849 4.86127 10.8956 4.86127 11.6063 4.86127C12.2181 4.86127 12.8278 4.86127 13.4397 4.86127C13.7363 4.86127 14.035 4.86498 14.3316 4.86127C14.3358 4.86127 14.3399 4.86127 14.344 4.86127C14.789 4.86127 15.168 4.52186 15.168 4.11939C15.168 3.75587 15.168 3.3905 15.168 3.02698C15.168 2.87118 15.168 2.71724 15.168 2.56145C15.1659 2.09221 14.9785 1.67676 14.653 1.31509C14.2719 0.895929 13.6621 0.669656 13.073 0.664092C12.6424 0.660382 12.2284 1.00907 12.249 1.40597C12.2696 1.81215 12.6115 2.14414 13.073 2.14785C13.1307 2.14785 13.1863 2.15156 13.2419 2.15712C13.1698 2.14785 13.0956 2.13858 13.0235 2.13116C13.1327 2.14599 13.2378 2.17011 13.3408 2.20905C13.2749 2.18494 13.2089 2.15898 13.143 2.13487C13.2419 2.17382 13.3346 2.22204 13.4211 2.27953C13.3655 2.24058 13.3099 2.20164 13.2543 2.16269C13.347 2.2276 13.4273 2.29993 13.4994 2.3834C13.4561 2.33332 13.4129 2.28324 13.3696 2.23317C13.4335 2.31106 13.487 2.39452 13.5303 2.48355C13.5035 2.4242 13.4747 2.36485 13.4479 2.3055C13.4891 2.39823 13.5179 2.49282 13.5344 2.59112C13.5241 2.52621 13.5138 2.45944 13.5056 2.39452C13.5324 2.59854 13.5159 2.81183 13.5159 3.01585C13.5159 3.31074 13.5159 3.6075 13.5159 3.90239C13.5159 3.97473 13.5159 4.0452 13.5159 4.11754C13.7899 3.87086 14.0659 3.62233 14.3399 3.37566C14.0968 3.37566 13.8537 3.37566 13.6106 3.37566C13.0256 3.37566 12.4426 3.37566 11.8576 3.37566C11.1469 3.37566 10.4362 3.37566 9.72547 3.37566C9.11365 3.37566 8.50389 3.37566 7.89207 3.37566C7.59543 3.37566 7.29673 3.3701 7.00009 3.37566C6.99597 3.37566 6.99185 3.37566 6.98773 3.37566C7.26171 3.62233 7.53775 3.87086 7.81173 4.11754C7.81173 3.64088 7.81173 3.16608 7.81173 2.68942C7.81173 2.59112 7.80967 2.49282 7.82203 2.39452C7.81173 2.45944 7.80143 2.52621 7.79319 2.59112C7.80967 2.49282 7.83645 2.39823 7.87971 2.3055C7.85293 2.36485 7.82409 2.4242 7.79731 2.48355C7.84057 2.39452 7.89413 2.31106 7.95799 2.23317C7.91473 2.28324 7.87147 2.33332 7.82821 2.3834C7.90031 2.29993 7.98065 2.2276 8.07335 2.16269C8.01773 2.20164 7.96211 2.24058 7.90649 2.27953C7.99301 2.22204 8.08571 2.17382 8.18459 2.13487C8.11867 2.15898 8.05275 2.18494 7.98683 2.20905C8.08983 2.17196 8.19489 2.14599 8.30407 2.13116C8.23197 2.14043 8.15781 2.1497 8.08571 2.15712C8.27935 2.13487 8.48123 2.14785 8.67693 2.14785C9.05597 2.14785 9.43501 2.14785 9.81405 2.14785C10.6937 2.14785 11.5733 2.14785 12.455 2.14785C12.6589 2.14785 12.8649 2.14785 13.0689 2.14785C13.4994 2.14785 13.9135 1.80659 13.8929 1.40597C13.8764 1.0035 13.5344 0.664092 13.073 0.664092Z"
                fill="#E62614"
              />
              <path
                d="M19.8413 3.37582C19.6785 3.37582 19.5137 3.37582 19.351 3.37582C18.906 3.37582 18.4611 3.37582 18.0161 3.37582C17.359 3.37582 16.6998 3.37582 16.0426 3.37582C15.2392 3.37582 14.4358 3.37582 13.6345 3.37582C12.7549 3.37582 11.8752 3.37582 10.9956 3.37582C10.1078 3.37582 9.21989 3.37582 8.33203 3.37582C7.50391 3.37582 6.67579 3.37582 5.84766 3.37582C5.14726 3.37582 4.44686 3.37582 3.74852 3.37582C3.24382 3.37582 2.73912 3.37582 2.23442 3.37582C1.99752 3.37582 1.76062 3.37397 1.52166 3.37582C1.51136 3.37582 1.50106 3.37582 1.49076 3.37582C1.06021 3.37582 0.646153 3.71709 0.666754 4.1177C0.687354 4.52017 1.02931 4.85958 1.49076 4.85958C1.6535 4.85958 1.8183 4.85958 1.98104 4.85958C2.426 4.85958 2.87096 4.85958 3.31592 4.85958C3.97306 4.85958 4.63226 4.85958 5.2894 4.85958C6.09281 4.85958 6.89621 4.85958 7.69755 4.85958C8.57717 4.85958 9.45679 4.85958 10.3364 4.85958C11.2243 4.85958 12.1121 4.85958 13 4.85958C13.8281 4.85958 14.6562 4.85958 15.4844 4.85958C16.1848 4.85958 16.8852 4.85958 17.5835 4.85958C18.0882 4.85958 18.5929 4.85958 19.0976 4.85958C19.3345 4.85958 19.5714 4.86144 19.8104 4.85958C19.8207 4.85958 19.831 4.85958 19.8413 4.85958C20.2718 4.85958 20.6859 4.51832 20.6653 4.1177C20.6447 3.71523 20.3027 3.37582 19.8413 3.37582Z"
                fill="#E62614"
              />
              <path
                d="M8.85847 14.9837C8.85847 14.7334 8.85847 14.483 8.85847 14.2345C8.85847 13.6335 8.85847 13.0345 8.85847 12.4335C8.85847 11.7102 8.85847 10.9887 8.85847 10.2654C8.85847 9.63851 8.85847 9.00977 8.85847 8.38288C8.85847 8.07871 8.86464 7.77454 8.85847 7.47037C8.85847 7.46666 8.85847 7.4611 8.85847 7.45739C8.85847 7.06976 8.47972 6.69696 8.0351 6.71551C7.58842 6.73406 7.21173 7.04193 7.21173 7.45739C7.21173 7.70777 7.21173 7.95816 7.21173 8.20668C7.21173 8.80761 7.21173 9.40667 7.21173 10.0076C7.21173 10.7309 7.21173 11.4524 7.21173 12.1757C7.21173 12.8026 7.21173 13.4314 7.21173 14.0583C7.21173 14.3624 7.20555 14.6666 7.21173 14.9708C7.21173 14.9745 7.21173 14.98 7.21173 14.9837C7.21173 15.3714 7.59048 15.7442 8.0351 15.7256C8.47972 15.7089 8.85847 15.4011 8.85847 14.9837Z"
                fill="#E62614"
              />
              <path
                d="M14.1163 14.9837C14.1163 14.7334 14.1163 14.483 14.1163 14.2345C14.1163 13.6335 14.1163 13.0345 14.1163 12.4335C14.1163 11.7102 14.1163 10.9887 14.1163 10.2654C14.1163 9.63851 14.1163 9.00977 14.1163 8.38288C14.1163 8.07871 14.1225 7.77454 14.1163 7.47037C14.1163 7.46666 14.1163 7.4611 14.1163 7.45739C14.1163 7.06976 13.7375 6.69696 13.2929 6.71551C12.8462 6.73406 12.4695 7.04193 12.4695 7.45739C12.4695 7.70777 12.4695 7.95816 12.4695 8.20668C12.4695 8.80761 12.4695 9.40667 12.4695 10.0076C12.4695 10.7309 12.4695 11.4524 12.4695 12.1757C12.4695 12.8026 12.4695 13.4314 12.4695 14.0583C12.4695 14.3624 12.4634 14.6666 12.4695 14.9708C12.4695 14.9745 12.4695 14.98 12.4695 14.9837C12.4695 15.3714 12.8483 15.7442 13.2929 15.7256C13.7396 15.7089 14.1163 15.4011 14.1163 14.9837Z"
                fill="#E62614"
              />
            </svg>
            <svg
              width="17"
              height="16"
              viewBox="0 0 17 16"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              onClick={() => handleClickEdit()}
              className="editScheduleSVG"
            >
              <path
                d="M15.3603 1.62737C14.4202 0.790875 12.896 0.790875 11.9558 1.62737L2.41187 10.1192C2.34646 10.1774 2.29924 10.2495 2.27458 10.3287L1.01952 14.3602C0.967906 14.5255 1.02036 14.7025 1.1566 14.8239C1.29306 14.9452 1.492 14.9918 1.67777 14.9461L6.2088 13.8292C6.29782 13.8073 6.3789 13.7653 6.44431 13.7071L15.988 5.21508C16.9267 4.37802 16.9267 3.02296 15.988 2.18591L15.3603 1.62737ZM3.57749 10.4286L11.3885 3.47849L13.9076 5.71988L6.09638 12.6699L3.57749 10.4286ZM3.07429 11.327L5.08686 13.1178L2.303 13.8041L3.07429 11.327ZM15.2316 4.54201L14.6642 5.04681L12.1449 2.80524L12.7125 2.30044C13.2347 1.8358 14.0814 1.8358 14.6036 2.30044L15.2316 2.85897C15.753 3.32417 15.753 4.077 15.2316 4.54201Z"
                fill="#1A48E9"
                stroke="#1A48E9"
                strokeWidth="0.2"
              />
            </svg>

            <div className="scheduleItemV2__right--user">
              {employees.length > 3 && (
                <>
                  <svg
                    width="32"
                    height="32"
                    viewBox="0 0 32 32"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    className="moreUser"
                  >
                    <path
                      d="M16 30.6663C24.1002 30.6663 30.6666 24.0999 30.6666 15.9997C30.6666 7.89948 24.1002 1.33301 16 1.33301C7.89979 1.33301 1.33331 7.89948 1.33331 15.9997C1.33331 24.0999 7.89979 30.6663 16 30.6663ZM9.71427 18.0949C9.15857 18.0949 8.62564 17.8742 8.23271 17.4812C7.83978 17.0883 7.61903 16.5554 7.61903 15.9997C7.61903 15.444 7.83978 14.9111 8.23271 14.5181C8.62564 14.1252 9.15857 13.9044 9.71427 13.9044C10.27 13.9044 10.8029 14.1252 11.1958 14.5181C11.5888 14.9111 11.8095 15.444 11.8095 15.9997C11.8095 16.5554 11.5888 17.0883 11.1958 17.4812C10.8029 17.8742 10.27 18.0949 9.71427 18.0949ZM18.0952 15.9997C18.0952 16.5554 17.8745 17.0883 17.4815 17.4812C17.0886 17.8742 16.5557 18.0949 16 18.0949C15.4443 18.0949 14.9114 17.8742 14.5184 17.4812C14.1255 17.0883 13.9047 16.5554 13.9047 15.9997C13.9047 15.444 14.1255 14.9111 14.5184 14.5181C14.9114 14.1252 15.4443 13.9044 16 13.9044C16.5557 13.9044 17.0886 14.1252 17.4815 14.5181C17.8745 14.9111 18.0952 15.444 18.0952 15.9997ZM22.2857 18.0949C21.73 18.0949 21.1971 17.8742 20.8041 17.4812C20.4112 17.0883 20.1905 16.5554 20.1905 15.9997C20.1905 15.444 20.4112 14.9111 20.8041 14.5181C21.1971 14.1252 21.73 13.9044 22.2857 13.9044C22.8414 13.9044 23.3743 14.1252 23.7673 14.5181C24.1602 14.9111 24.3809 15.444 24.3809 15.9997C24.3809 16.5554 24.1602 17.0883 23.7673 17.4812C23.3743 17.8742 22.8414 18.0949 22.2857 18.0949Z"
                      fill="#393B3D"
                    />
                  </svg>
                  <PopupListUser employees={employees} />
                </>
              )}

              {employees &&
                employees.map((item, index) => {
                  if (index < 3) {
                    return (

                      <div
                        className="image-user"
                        id={`image-user-${index + 1}`}
                        style={{
                          right: `${index * 20 + 20}px`,
                          zIndex: `${4 - index}`,
                        }}
                        key={`${item.id}${item.full_name}`}
                      >
                        <AvatarUser
                          avatar={item.avatar}
                          fullName={item.full_name}
                          department={item.department}
                        />
                      </div>

                    )
                  } else {
                    return null
                  }
                })}
              <svg
                width="30"
                height="30"
                viewBox="0 0 30 30"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className="addUserSVGSchedule"
                onClick={(e) => handleClickAddUser(e)}

              >
                <path
                  d="M14.6667 0C22.7672 0 29.3335 6.5663 29.3335 14.6667C29.3335 22.7672 22.7672 29.3335 14.6667 29.3335C6.5663 29.3335 0 22.7672 0 14.6667C0 6.5663 6.5663 0 14.6667 0ZM14.6667 7.33337C14.4009 7.33339 14.1441 7.42965 13.9438 7.60437C13.7434 7.77908 13.6132 8.02043 13.577 8.28378L13.5667 8.43338V13.5667H8.43338C8.15468 13.5668 7.8864 13.6727 7.68275 13.863C7.4791 14.0532 7.35527 14.3137 7.33627 14.5918C7.31727 14.8698 7.40453 15.1447 7.58041 15.3609C7.75629 15.5771 8.00768 15.7185 8.28378 15.7565L8.43338 15.7668H13.5667V20.9001C13.5668 21.1788 13.6727 21.4471 13.863 21.6507C14.0532 21.8544 14.3137 21.9782 14.5918 21.9972C14.8698 22.0162 15.1447 21.929 15.3609 21.7531C15.5771 21.5772 15.7185 21.3258 15.7565 21.0497L15.7668 20.9001V15.7668H20.9001C21.1788 15.7667 21.4471 15.6608 21.6507 15.4705C21.8544 15.2803 21.9782 15.0198 21.9972 14.7417C22.0162 14.4637 21.929 14.1888 21.7531 13.9726C21.5772 13.7564 21.3258 13.615 21.0497 13.577L20.9001 13.5667H15.7668V8.43338C15.7668 8.14164 15.6509 7.86185 15.4446 7.65556C15.2383 7.44927 14.9585 7.33337 14.6667 7.33337Z"
                  fill="#393B3D"
                />
              </svg>
              <PopupAddUser employees={employees} keyID={keyID} idSchedule={idSchedule} funcSetStartDate={funcSetStartDate} />
            </div>
          </div>
        </div>
      ) : (
        <div
          className="scheduleItem"
          style={{
            top: `${caculatePositionY(timeStart, MeetingTimeStart)}px`,
            height: `${caculatePositionY(timeStart, MeetingTimeEnd) -
              caculatePositionY(timeStart, MeetingTimeStart)
              }px`,
            background: `${checkColorBackground(type)}`,
            borderLeft: `16px solid ${checkColorBorder(type)}`,
          }}
          onClick={(e) => handleClickViewDetailSchedule(e)}

        >
          <div className="scheduleItem__left">
            <div className="scheduleItem__left--time">
              {getTimeFormat(MeetingTimeStart)} -{" "}
              {getTimeFormat(MeetingTimeEnd)}
            </div>
            <div className="scheduleItem__left--title">{title}</div>
            <div className="scheduleItem__left--desc">
              <p>{description}</p>
            </div>
          </div>
          <div className="scheduleItem__right">
            <svg
              width="21"
              height="20"
              viewBox="0 0 21 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              onClick={() => handleClickDelete(dataSchedule.id)}

            >
              <path
                d="M16.4312 17.5791C16.0418 17.5791 15.6504 17.5791 15.2611 17.5791C14.3258 17.5791 13.3927 17.5791 12.4574 17.5791C11.3409 17.5791 10.2244 17.5791 9.10578 17.5791C8.14582 17.5791 7.18586 17.5791 6.2259 17.5791C5.78506 17.5791 5.34215 17.5809 4.90131 17.5791C4.82303 17.5791 4.74475 17.5735 4.66647 17.5661C4.73857 17.5754 4.81273 17.5847 4.88483 17.5921C4.73857 17.5735 4.59643 17.5401 4.45841 17.4901C4.52433 17.5142 4.59025 17.5401 4.65617 17.5643C4.51403 17.5105 4.38219 17.4418 4.26065 17.3565C4.31627 17.3955 4.37189 17.4344 4.42751 17.4734C4.31421 17.3936 4.21327 17.3027 4.12469 17.2007C4.16795 17.2508 4.21121 17.3009 4.25447 17.351C4.16177 17.2415 4.08349 17.1228 4.02375 16.9949C4.05053 17.0542 4.07937 17.1136 4.10615 17.1729C4.05053 17.0486 4.01345 16.9207 3.99285 16.789C4.00315 16.8539 4.01345 16.9207 4.02169 16.9856C3.99903 16.8205 4.00727 16.6517 4.00727 16.4867C4.00727 16.1899 4.00727 15.8932 4.00727 15.5964C4.00727 15.1457 4.00727 14.695 4.00727 14.2443C4.00727 13.6898 4.00727 13.1334 4.00727 12.5788C4.00727 11.9705 4.00727 11.3621 4.00727 10.7538C4.00727 10.1343 4.00727 9.51487 4.00727 8.89726C4.00727 8.31859 4.00727 7.73993 4.00727 7.16126C4.00727 6.67348 4.00727 6.18569 4.00727 5.69976C4.00727 5.34737 4.00727 4.99312 4.00727 4.64073C4.00727 4.4738 4.00933 4.30688 4.00727 4.13996C4.00727 4.13254 4.00727 4.12512 4.00727 4.1177C3.73329 4.36438 3.45725 4.61291 3.18327 4.85958C3.31717 4.85958 3.45107 4.85958 3.58291 4.85958C3.94547 4.85958 4.31009 4.85958 4.67265 4.85958C5.20619 4.85958 5.7418 4.85958 6.27534 4.85958C6.93042 4.85958 7.5855 4.85958 8.24058 4.85958C8.95746 4.85958 9.6764 4.85958 10.3933 4.85958C11.1184 4.85958 11.8415 4.85958 12.5666 4.85958C13.2423 4.85958 13.918 4.85958 14.5936 4.85958C15.1622 4.85958 15.7308 4.85958 16.2993 4.85958C16.7093 4.85958 17.1213 4.85958 17.5312 4.85958C17.7269 4.85958 17.9205 4.86144 18.1162 4.85958C18.1245 4.85958 18.1327 4.85958 18.141 4.85958C17.867 4.61291 17.5909 4.36438 17.317 4.1177C17.317 4.23269 17.317 4.34769 17.317 4.46268C17.317 4.77241 17.317 5.084 17.317 5.39373C17.317 5.8537 17.317 6.31552 17.317 6.77548C17.317 7.33746 17.317 7.89758 17.317 8.45955C17.317 9.06974 17.317 9.67994 17.317 10.292C17.317 10.9096 17.317 11.5272 17.317 12.1448C17.317 12.7179 17.317 13.291 17.317 13.8641C17.317 14.3426 17.317 14.8212 17.317 15.2997C17.317 15.6391 17.317 15.9803 17.317 16.3198C17.317 16.47 17.317 16.6202 17.317 16.7704C17.317 16.8428 17.3128 16.9133 17.3025 16.9856C17.3128 16.9207 17.3231 16.8539 17.3314 16.789C17.3108 16.9207 17.2737 17.0486 17.2181 17.1729C17.2449 17.1136 17.2737 17.0542 17.3005 16.9949C17.2407 17.1228 17.1645 17.2415 17.0698 17.351C17.113 17.3009 17.1563 17.2508 17.1995 17.2007C17.111 17.3027 17.01 17.3936 16.8967 17.4734C16.9523 17.4344 17.008 17.3955 17.0636 17.3565C16.942 17.44 16.8102 17.5105 16.6681 17.5643C16.734 17.5401 16.7999 17.5142 16.8658 17.4901C16.7278 17.5401 16.5857 17.5735 16.4394 17.5921C16.5115 17.5828 16.5857 17.5735 16.6578 17.5661C16.5836 17.5754 16.5074 17.5791 16.4312 17.5791C16.219 17.5809 15.9986 17.6607 15.8482 17.7961C15.706 17.9241 15.5969 18.1355 15.6072 18.321C15.6278 18.7197 15.9697 19.0666 16.4312 19.0628C17.1192 19.0573 17.8134 18.8032 18.279 18.3414C18.7136 17.9111 18.9629 17.3621 18.967 16.7779C18.9691 16.6276 18.967 16.4755 18.967 16.3253C18.967 15.9488 18.967 15.5723 18.967 15.1977C18.967 14.6561 18.967 14.1145 18.967 13.5729C18.967 12.9331 18.967 12.2951 18.967 11.6552C18.967 10.9782 18.967 10.3013 18.967 9.62615C18.967 8.97145 18.967 8.31859 18.967 7.66388C18.967 7.10191 18.967 6.53808 18.967 5.97611C18.967 5.56251 18.967 5.14891 18.967 4.73532C18.967 4.53872 18.9691 4.34027 18.967 4.14367C18.967 4.1344 18.967 4.12698 18.967 4.1177C18.967 3.71709 18.59 3.37582 18.143 3.37582C18.0091 3.37582 17.8752 3.37582 17.7434 3.37582C17.3808 3.37582 17.0162 3.37582 16.6536 3.37582C16.1201 3.37582 15.5845 3.37582 15.051 3.37582C14.3959 3.37582 13.7408 3.37582 13.0857 3.37582C12.3688 3.37582 11.6499 3.37582 10.933 3.37582C10.2079 3.37582 9.48482 3.37582 8.7597 3.37582C8.08402 3.37582 7.40834 3.37582 6.73266 3.37582C6.1641 3.37582 5.59554 3.37582 5.02697 3.37582C4.61703 3.37582 4.20503 3.37582 3.79509 3.37582C3.59939 3.37582 3.40575 3.37397 3.21005 3.37582C3.20181 3.37582 3.19357 3.37582 3.18533 3.37582C2.74037 3.37582 2.36133 3.71523 2.36133 4.1177C2.36133 4.5109 2.36133 4.90224 2.36133 5.29544C2.36133 6.24133 2.36133 7.18908 2.36133 8.13498C2.36133 9.30344 2.36133 10.47 2.36133 11.6385C2.36133 12.6994 2.36133 13.7603 2.36133 14.8193C2.36133 15.4276 2.36133 16.0341 2.36133 16.6425C2.36133 17.082 2.44579 17.5068 2.68475 17.8962C3.12971 18.6251 4.01139 19.061 4.92603 19.0628C5.55434 19.0628 6.18264 19.0628 6.81094 19.0628C8.02222 19.0628 9.23556 19.0628 10.4468 19.0628C11.687 19.0628 12.925 19.0628 14.1652 19.0628C14.8862 19.0628 15.6072 19.0628 16.3261 19.0628C16.3611 19.0628 16.3961 19.0628 16.4312 19.0628C16.8617 19.0628 17.2758 18.7216 17.2552 18.321C17.2346 17.9204 16.8926 17.5791 16.4312 17.5791Z"
                fill="#E62614"
              />
              <path
                d="M13.073 0.664092C12.7084 0.664092 12.3417 0.664092 11.9771 0.664092C11.2581 0.664092 10.5371 0.664092 9.81817 0.664092C9.32171 0.664092 8.82525 0.664092 8.32879 0.664092C7.91061 0.664092 7.48007 0.747553 7.13193 0.962698C6.53659 1.32622 6.17197 1.90303 6.16785 2.55588C6.16373 3.06036 6.16785 3.56484 6.16785 4.06932C6.16785 4.08601 6.16785 4.1027 6.16785 4.11939C6.16785 4.52001 6.54483 4.86127 6.99185 4.86127C7.23493 4.86127 7.47801 4.86127 7.72109 4.86127C8.30613 4.86127 8.88911 4.86127 9.47415 4.86127C10.1849 4.86127 10.8956 4.86127 11.6063 4.86127C12.2181 4.86127 12.8278 4.86127 13.4397 4.86127C13.7363 4.86127 14.035 4.86498 14.3316 4.86127C14.3358 4.86127 14.3399 4.86127 14.344 4.86127C14.789 4.86127 15.168 4.52186 15.168 4.11939C15.168 3.75587 15.168 3.3905 15.168 3.02698C15.168 2.87118 15.168 2.71724 15.168 2.56145C15.1659 2.09221 14.9785 1.67676 14.653 1.31509C14.2719 0.895929 13.6621 0.669656 13.073 0.664092C12.6424 0.660382 12.2284 1.00907 12.249 1.40597C12.2696 1.81215 12.6115 2.14414 13.073 2.14785C13.1307 2.14785 13.1863 2.15156 13.2419 2.15712C13.1698 2.14785 13.0956 2.13858 13.0235 2.13116C13.1327 2.14599 13.2378 2.17011 13.3408 2.20905C13.2749 2.18494 13.2089 2.15898 13.143 2.13487C13.2419 2.17382 13.3346 2.22204 13.4211 2.27953C13.3655 2.24058 13.3099 2.20164 13.2543 2.16269C13.347 2.2276 13.4273 2.29993 13.4994 2.3834C13.4561 2.33332 13.4129 2.28324 13.3696 2.23317C13.4335 2.31106 13.487 2.39452 13.5303 2.48355C13.5035 2.4242 13.4747 2.36485 13.4479 2.3055C13.4891 2.39823 13.5179 2.49282 13.5344 2.59112C13.5241 2.52621 13.5138 2.45944 13.5056 2.39452C13.5324 2.59854 13.5159 2.81183 13.5159 3.01585C13.5159 3.31074 13.5159 3.6075 13.5159 3.90239C13.5159 3.97473 13.5159 4.0452 13.5159 4.11754C13.7899 3.87086 14.0659 3.62233 14.3399 3.37566C14.0968 3.37566 13.8537 3.37566 13.6106 3.37566C13.0256 3.37566 12.4426 3.37566 11.8576 3.37566C11.1469 3.37566 10.4362 3.37566 9.72547 3.37566C9.11365 3.37566 8.50389 3.37566 7.89207 3.37566C7.59543 3.37566 7.29673 3.3701 7.00009 3.37566C6.99597 3.37566 6.99185 3.37566 6.98773 3.37566C7.26171 3.62233 7.53775 3.87086 7.81173 4.11754C7.81173 3.64088 7.81173 3.16608 7.81173 2.68942C7.81173 2.59112 7.80967 2.49282 7.82203 2.39452C7.81173 2.45944 7.80143 2.52621 7.79319 2.59112C7.80967 2.49282 7.83645 2.39823 7.87971 2.3055C7.85293 2.36485 7.82409 2.4242 7.79731 2.48355C7.84057 2.39452 7.89413 2.31106 7.95799 2.23317C7.91473 2.28324 7.87147 2.33332 7.82821 2.3834C7.90031 2.29993 7.98065 2.2276 8.07335 2.16269C8.01773 2.20164 7.96211 2.24058 7.90649 2.27953C7.99301 2.22204 8.08571 2.17382 8.18459 2.13487C8.11867 2.15898 8.05275 2.18494 7.98683 2.20905C8.08983 2.17196 8.19489 2.14599 8.30407 2.13116C8.23197 2.14043 8.15781 2.1497 8.08571 2.15712C8.27935 2.13487 8.48123 2.14785 8.67693 2.14785C9.05597 2.14785 9.43501 2.14785 9.81405 2.14785C10.6937 2.14785 11.5733 2.14785 12.455 2.14785C12.6589 2.14785 12.8649 2.14785 13.0689 2.14785C13.4994 2.14785 13.9135 1.80659 13.8929 1.40597C13.8764 1.0035 13.5344 0.664092 13.073 0.664092Z"
                fill="#E62614"
              />
              <path
                d="M19.8413 3.37582C19.6785 3.37582 19.5137 3.37582 19.351 3.37582C18.906 3.37582 18.4611 3.37582 18.0161 3.37582C17.359 3.37582 16.6998 3.37582 16.0426 3.37582C15.2392 3.37582 14.4358 3.37582 13.6345 3.37582C12.7549 3.37582 11.8752 3.37582 10.9956 3.37582C10.1078 3.37582 9.21989 3.37582 8.33203 3.37582C7.50391 3.37582 6.67579 3.37582 5.84766 3.37582C5.14726 3.37582 4.44686 3.37582 3.74852 3.37582C3.24382 3.37582 2.73912 3.37582 2.23442 3.37582C1.99752 3.37582 1.76062 3.37397 1.52166 3.37582C1.51136 3.37582 1.50106 3.37582 1.49076 3.37582C1.06021 3.37582 0.646153 3.71709 0.666754 4.1177C0.687354 4.52017 1.02931 4.85958 1.49076 4.85958C1.6535 4.85958 1.8183 4.85958 1.98104 4.85958C2.426 4.85958 2.87096 4.85958 3.31592 4.85958C3.97306 4.85958 4.63226 4.85958 5.2894 4.85958C6.09281 4.85958 6.89621 4.85958 7.69755 4.85958C8.57717 4.85958 9.45679 4.85958 10.3364 4.85958C11.2243 4.85958 12.1121 4.85958 13 4.85958C13.8281 4.85958 14.6562 4.85958 15.4844 4.85958C16.1848 4.85958 16.8852 4.85958 17.5835 4.85958C18.0882 4.85958 18.5929 4.85958 19.0976 4.85958C19.3345 4.85958 19.5714 4.86144 19.8104 4.85958C19.8207 4.85958 19.831 4.85958 19.8413 4.85958C20.2718 4.85958 20.6859 4.51832 20.6653 4.1177C20.6447 3.71523 20.3027 3.37582 19.8413 3.37582Z"
                fill="#E62614"
              />
              <path
                d="M8.85847 14.9837C8.85847 14.7334 8.85847 14.483 8.85847 14.2345C8.85847 13.6335 8.85847 13.0345 8.85847 12.4335C8.85847 11.7102 8.85847 10.9887 8.85847 10.2654C8.85847 9.63851 8.85847 9.00977 8.85847 8.38288C8.85847 8.07871 8.86464 7.77454 8.85847 7.47037C8.85847 7.46666 8.85847 7.4611 8.85847 7.45739C8.85847 7.06976 8.47972 6.69696 8.0351 6.71551C7.58842 6.73406 7.21173 7.04193 7.21173 7.45739C7.21173 7.70777 7.21173 7.95816 7.21173 8.20668C7.21173 8.80761 7.21173 9.40667 7.21173 10.0076C7.21173 10.7309 7.21173 11.4524 7.21173 12.1757C7.21173 12.8026 7.21173 13.4314 7.21173 14.0583C7.21173 14.3624 7.20555 14.6666 7.21173 14.9708C7.21173 14.9745 7.21173 14.98 7.21173 14.9837C7.21173 15.3714 7.59048 15.7442 8.0351 15.7256C8.47972 15.7089 8.85847 15.4011 8.85847 14.9837Z"
                fill="#E62614"
              />
              <path
                d="M14.1163 14.9837C14.1163 14.7334 14.1163 14.483 14.1163 14.2345C14.1163 13.6335 14.1163 13.0345 14.1163 12.4335C14.1163 11.7102 14.1163 10.9887 14.1163 10.2654C14.1163 9.63851 14.1163 9.00977 14.1163 8.38288C14.1163 8.07871 14.1225 7.77454 14.1163 7.47037C14.1163 7.46666 14.1163 7.4611 14.1163 7.45739C14.1163 7.06976 13.7375 6.69696 13.2929 6.71551C12.8462 6.73406 12.4695 7.04193 12.4695 7.45739C12.4695 7.70777 12.4695 7.95816 12.4695 8.20668C12.4695 8.80761 12.4695 9.40667 12.4695 10.0076C12.4695 10.7309 12.4695 11.4524 12.4695 12.1757C12.4695 12.8026 12.4695 13.4314 12.4695 14.0583C12.4695 14.3624 12.4634 14.6666 12.4695 14.9708C12.4695 14.9745 12.4695 14.98 12.4695 14.9837C12.4695 15.3714 12.8483 15.7442 13.2929 15.7256C13.7396 15.7089 14.1163 15.4011 14.1163 14.9837Z"
                fill="#E62614"
              />
            </svg>
            <svg
              width="17"
              height="16"
              viewBox="0 0 17 16"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              onClick={() => handleClickEdit()}
              className="editScheduleSVG"

            >
              <path
                d="M15.3603 1.62737C14.4202 0.790875 12.896 0.790875 11.9558 1.62737L2.41187 10.1192C2.34646 10.1774 2.29924 10.2495 2.27458 10.3287L1.01952 14.3602C0.967906 14.5255 1.02036 14.7025 1.1566 14.8239C1.29306 14.9452 1.492 14.9918 1.67777 14.9461L6.2088 13.8292C6.29782 13.8073 6.3789 13.7653 6.44431 13.7071L15.988 5.21508C16.9267 4.37802 16.9267 3.02296 15.988 2.18591L15.3603 1.62737ZM3.57749 10.4286L11.3885 3.47849L13.9076 5.71988L6.09638 12.6699L3.57749 10.4286ZM3.07429 11.327L5.08686 13.1178L2.303 13.8041L3.07429 11.327ZM15.2316 4.54201L14.6642 5.04681L12.1449 2.80524L12.7125 2.30044C13.2347 1.8358 14.0814 1.8358 14.6036 2.30044L15.2316 2.85897C15.753 3.32417 15.753 4.077 15.2316 4.54201Z"
                fill="#1A48E9"
                stroke="#1A48E9"
                strokeWidth="0.2"
              />
            </svg>

            <div className="scheduleItem__right--user">
              {employees.length > 3 && (
                <>
                  <svg
                    width="32"
                    height="32"
                    viewBox="0 0 32 32"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    className="moreUser"
                  >
                    <path
                      d="M16 30.6663C24.1002 30.6663 30.6666 24.0999 30.6666 15.9997C30.6666 7.89948 24.1002 1.33301 16 1.33301C7.89979 1.33301 1.33331 7.89948 1.33331 15.9997C1.33331 24.0999 7.89979 30.6663 16 30.6663ZM9.71427 18.0949C9.15857 18.0949 8.62564 17.8742 8.23271 17.4812C7.83978 17.0883 7.61903 16.5554 7.61903 15.9997C7.61903 15.444 7.83978 14.9111 8.23271 14.5181C8.62564 14.1252 9.15857 13.9044 9.71427 13.9044C10.27 13.9044 10.8029 14.1252 11.1958 14.5181C11.5888 14.9111 11.8095 15.444 11.8095 15.9997C11.8095 16.5554 11.5888 17.0883 11.1958 17.4812C10.8029 17.8742 10.27 18.0949 9.71427 18.0949ZM18.0952 15.9997C18.0952 16.5554 17.8745 17.0883 17.4815 17.4812C17.0886 17.8742 16.5557 18.0949 16 18.0949C15.4443 18.0949 14.9114 17.8742 14.5184 17.4812C14.1255 17.0883 13.9047 16.5554 13.9047 15.9997C13.9047 15.444 14.1255 14.9111 14.5184 14.5181C14.9114 14.1252 15.4443 13.9044 16 13.9044C16.5557 13.9044 17.0886 14.1252 17.4815 14.5181C17.8745 14.9111 18.0952 15.444 18.0952 15.9997ZM22.2857 18.0949C21.73 18.0949 21.1971 17.8742 20.8041 17.4812C20.4112 17.0883 20.1905 16.5554 20.1905 15.9997C20.1905 15.444 20.4112 14.9111 20.8041 14.5181C21.1971 14.1252 21.73 13.9044 22.2857 13.9044C22.8414 13.9044 23.3743 14.1252 23.7673 14.5181C24.1602 14.9111 24.3809 15.444 24.3809 15.9997C24.3809 16.5554 24.1602 17.0883 23.7673 17.4812C23.3743 17.8742 22.8414 18.0949 22.2857 18.0949Z"
                      fill="#393B3D"
                    />
                  </svg>
                  <PopupListUser employees={employees} />
                </>
              )}
              {employees &&
                employees.map((item, index) => {
                  if (index < 3) {
                    return (

                      <div
                        className="image-user"
                        id={`image-user-${index + 1}`}
                        style={{
                          right: `${index * 20 + 20}px`,
                          zIndex: `${4 - index}`,

                        }}
                        key={`${item.id}${item.full_name}`}
                      >
                        <AvatarUser
                          avatar={item.avatar}
                          fullName={item.full_name}
                          department={item.department}
                        />
                      </div>

                    )
                  } else {
                    return null
                  }
                })}
              <svg
                width="30"
                height="30"
                viewBox="0 0 30 30"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className="addUserSVGSchedule"
                onClick={(e) => handleClickAddUser(e)}
              >
                <path
                  d="M14.6667 0C22.7672 0 29.3335 6.5663 29.3335 14.6667C29.3335 22.7672 22.7672 29.3335 14.6667 29.3335C6.5663 29.3335 0 22.7672 0 14.6667C0 6.5663 6.5663 0 14.6667 0ZM14.6667 7.33337C14.4009 7.33339 14.1441 7.42965 13.9438 7.60437C13.7434 7.77908 13.6132 8.02043 13.577 8.28378L13.5667 8.43338V13.5667H8.43338C8.15468 13.5668 7.8864 13.6727 7.68275 13.863C7.4791 14.0532 7.35527 14.3137 7.33627 14.5918C7.31727 14.8698 7.40453 15.1447 7.58041 15.3609C7.75629 15.5771 8.00768 15.7185 8.28378 15.7565L8.43338 15.7668H13.5667V20.9001C13.5668 21.1788 13.6727 21.4471 13.863 21.6507C14.0532 21.8544 14.3137 21.9782 14.5918 21.9972C14.8698 22.0162 15.1447 21.929 15.3609 21.7531C15.5771 21.5772 15.7185 21.3258 15.7565 21.0497L15.7668 20.9001V15.7668H20.9001C21.1788 15.7667 21.4471 15.6608 21.6507 15.4705C21.8544 15.2803 21.9782 15.0198 21.9972 14.7417C22.0162 14.4637 21.929 14.1888 21.7531 13.9726C21.5772 13.7564 21.3258 13.615 21.0497 13.577L20.9001 13.5667H15.7668V8.43338C15.7668 8.14164 15.6509 7.86185 15.4446 7.65556C15.2383 7.44927 14.9585 7.33337 14.6667 7.33337Z"
                  fill="#393B3D"
                />
              </svg>

              <PopupAddUser employees={employees} keyID={keyID} idSchedule={idSchedule} funcSetStartDate={funcSetStartDate} />
            </div>
          </div>
        </div>
      )}
    </>
  )
}
